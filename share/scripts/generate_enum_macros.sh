#!/bin/sh

#====================================================================================
# Copyright (c) 2022 University of Colorado
# Licensed under the MIT license. See LICENSE.txt file in the MORIS root for details.
#
#====================================================================================

#====================================================================================
# 
# Script to generate entries in $MORISROOT/projects/MRS/ASR/src/fn_enum_macros_generated.hpp
#
# To regenerate .hpp file, increase variable maxArgs to maximum number of entries in 
# macro; then run
#
# sh generate_enum_macros.sh > $MORISROOT/projects/PRM/ENM/src/fn_enum_macros_generated.hpp
#
#====================================================================================

maxArgs=160

echo '/*'
echo ' * Copyright (c) 2022 University of Colorado'
echo ' * Licensed under the MIT license. See LICENSE.txt file in the MORIS root for details.'
echo ' *'
echo ' *------------------------------------------------------------------------------------'
echo ' *'
echo ' * fn_enum_macros_generated.hpp (file generated by script: generate_enum_macros.sh)'
echo ' *'
echo ' */'


string='#define NARGS_SEQ( '
ic=1
while [ $ic -le $maxArgs ];do
    string=$string" _$ic,"
    ic=`expr $ic + 1`
done
string=$string' N, ... ) N'
echo $string

ic=`expr $ic - 1`
string='#define NARGS( ... ) NARGS_SEQ( __VA_ARGS__'
while [ $ic -ge 1 ];do
    string=$string", $ic"
    ic=`expr $ic - 1`
done
string=$string')'
echo $string

ic=1
while [ $ic -le $maxArgs ];do
    echo ''
    echo '//----------------------------------------------'
    echo ''
    
    echo '#define ENUM_MACRO_'$ic'( \'
    echo 'name, \'
   
    iic=1
    while [ $iic -lt $ic ];do
        echo 'v'$iic', \'
        iic=`expr $iic + 1`
    done
    echo 'v'$iic' \'
    echo ') \'

    echo 'enum class name\'
    echo '{ \'
    iic=1
    while [ $iic -lt $ic ];do
        echo 'v'$iic', \'
        iic=`expr $iic + 1`
    done
    echo 'v'$iic' \'
    echo '}; \'

    echo 'class name ##_String \'
    echo '{ \'
    echo 'public: \'
    echo 'static inline Vector< std::string > values = { \'
    iic=1
    while [ $iic -lt $ic ];do
        echo '#v'$iic', \'
        iic=`expr $iic + 1`
    done
    echo '#v'$iic' \'
    echo '}; \'
    echo '};'
    
    ic=`expr $ic + 1`
done
